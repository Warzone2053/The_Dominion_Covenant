# .gitea/workflows/footer-audit.yml

name: "Copyright Footer Audit"

# This workflow runs on two events:
# 1. 'push': When anyone pushes commits to any branch.
# 2. 'pull_request': When a pull request is opened or updated.
on: [push, pull_request]

jobs:
  audit-footers:
    # Use a standard Ubuntu runner provided by Gitea/Act.
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository's code
      # This action downloads your code so the script can access the files.
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Run the audit script
      # This is the core of the workflow. It uses a shell script to perform the check.
      - name: Verify Copyright Footers in Markdown Files
        run: |
          # --- CONFIGURATION ---
          # Define the exact, correct copyright footer.
          # NOTE: The blank line after the final '---' is intentional and important.
          GOLDEN_FOOTER="---
---
###### Copyright Â© 2025 Jadon.M.Banninga. All Rights Reserved.

###### This document is part of the Dominion Covenant project. Unauthorized reproduction, distribution, or adaptation of this work is prohibited."

          # Get the number of lines in the golden footer for an accurate comparison.
          FOOTER_LINES=$(echo "$GOLDEN_FOOTER" | wc -l)

          # List of files to specifically exclude from the footer check.
          # These files have a different structure or no footer at all.
          EXCLUDE_FILES=(
            "./TREE.md"
            "./ACKNOWLEDGMENTS.md"
            "./LICENSE.md"
          )

          # --- SCRIPT LOGIC ---
          echo "Starting copyright footer audit..."
          
          # This flag will be set to 'false' if any file fails the check.
          AUDIT_PASSED=true

          # Find all files ending in .md, but exclude the .git directory.
          # The 'while' loop is a robust way to handle filenames with spaces.
          find . -type f -name "*.md" ! -path "./.git/*" | while read -r file; do
            # Check if the current file is in our exclusion list.
            is_excluded=false
            for excluded_file in "${EXCLUDE_FILES[@]}"; do
              if [[ "$file" == "$excluded_file" ]]; then
                is_excluded=true
                break
              fi
            done

            if [ "$is_excluded" = true ]; then
              echo "INFO: Skipping excluded file: $file"
              continue # Move to the next file
            fi

            # Extract the last N lines from the file to get its actual footer.
            ACTUAL_FOOTER=$(tail -n "$FOOTER_LINES" "$file")

            # Compare the actual footer with the golden copy.
            if [ "$ACTUAL_FOOTER" != "$GOLDEN_FOOTER" ]; then
              # If they don't match, print a detailed error and set the flag to false.
              echo "-------------------------------------------------------------"
              echo "ERROR: Footer mismatch in file: $file"
              echo "--- EXPECTED FOOTER ---"
              echo "$GOLDEN_FOOTER"
              echo "--- ACTUAL FOOTER ---"
              echo "$ACTUAL_FOOTER"
              echo "-------------------------------------------------------------"
              AUDIT_PASSED=false
            else
              # If they match, print a success message for that file.
              echo "OK: Footer check passed for: $file"
            fi
          done

          # After checking all files, check the final status of our flag.
          if [ "$AUDIT_PASSED" = true ]; then
            echo "SUCCESS: All footers are correct and consistent."
            exit 0 # Exit with a success code
          else
            echo "FAILURE: One or more files have incorrect or missing footers. Please review the logs above."
            exit 1 # Exit with a failure code. This will make the Gitea Action fail.
          fi