# .gitea/workflows/footer-audit.yml

name: "Copyright Footer Audit"

on: [push, pull_request]

jobs:
  audit-footers:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Verify Copyright Footers in Markdown Files
        # Use 'shell: bash' to ensure we have a consistent shell environment.
        shell: bash
        run: |
          # --- CONFIGURATION ---
          # Define the "golden" footer using a 'here document'.
          read -r -d '' GOLDEN_FOOTER <<'EOF'
---
---
###### Copyright Â© 2025 Jadon.M.Banninga. All Rights Reserved.

###### This document is part of the Dominion Covenant project. Unauthorized reproduction, distribution, or adaptation of this work is prohibited.
EOF
          # IMPORTANT: The 'EOF' above MUST NOT have any leading spaces.

          FOOTER_LINES=$(echo "$GOLDEN_FOOTER" | wc -l)

          EXCLUDE_FILES=(
            "./TREE.md"
            "./ACKNOWLEDGMENTS.md"
            "./LICENSE.md"
          )

          # --- SCRIPT LOGIC ---
          echo "Starting copyright footer audit..."
          
          # Create a temporary file to store the names of any failing files.
          # This is the most reliable way to pass state out of a piped 'while' loop.
          FAILURES_FILE=$(mktemp)

          find . -type f -name "*.md" ! -path "./.git/*" | while IFS= read -r file; do
            is_excluded=false
            for excluded_file in "${EXCLUDE_FILES[@]}"; do
              if [[ "$file" == "$excluded_file" ]]; then
                is_excluded=true
                break
              fi
            done

            if [ "$is_excluded" = true ]; then
              echo "INFO: Skipping excluded file: $file"
              continue
            fi

            ACTUAL_FOOTER=$(tail -n "$FOOTER_LINES" "$file")

            if [ "$ACTUAL_FOOTER" != "$GOLDEN_FOOTER" ]; then
              echo "-------------------------------------------------------------"
              echo "ERROR: Footer mismatch in file: $file"
              echo "--- EXPECTED FOOTER ---"
              echo "$GOLDEN_FOOTER"
              echo "--- ACTUAL FOOTER ---"
              echo "$ACTUAL_FOOTER"
              echo "-------------------------------------------------------------"
              # Write the name of the failing file to our temporary log.
              echo "$file" >> "$FAILURES_FILE"
            else
              echo "OK: Footer check passed for: $file"
            fi
          done

          # After the loop, check if our temporary failures file has anything in it.
          if [ -s "$FAILURES_FILE" ]; then
            echo "FAILURE: One or more files have incorrect or missing footers. Please review the logs above."
            rm "$FAILURES_FILE" # Clean up the temp file
            exit 1 # Exit with a failure code
          else
            echo "SUCCESS: All footers are correct and consistent."
            rm "$FAILURES_FILE" # Clean up the temp file
            exit 0 # Exit with a success code
          fi