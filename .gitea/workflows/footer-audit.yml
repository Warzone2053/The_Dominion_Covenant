# .gitea/workflows/footer-audit.yml

name: "Copyright Footer Audit"

on: [push, pull_request]

jobs:
  audit-footers:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Verify Copyright Footers in Markdown Files
        run: |
          # --- CONFIGURATION ---
          # Define the "golden" footer using a 'here document'.
          # This is the robust way to handle multi-line strings in shell.
          # The 'EOF' marker can be any word, as long as it's the same at the start and end.
          read -r -d '' GOLDEN_FOOTER <<'EOF'
---
---
###### Copyright Â© 2025 Jadon.M.Banninga. All Rights Reserved.

###### This document is part of the Dominion Covenant project. Unauthorized reproduction, distribution, or adaptation of this work is prohibited.
EOF

          # Get the number of lines in the golden footer for accurate comparison.
          FOOTER_LINES=$(echo "$GOLDEN_FOOTER" | wc -l)

          # List of files to specifically exclude from the footer check.
          EXCLUDE_FILES=(
            "./TREE.md"
            "./ACKNOWLEDGMENTS.md"
            "./LICENSE.md"
          )

          # --- SCRIPT LOGIC ---
          echo "Starting copyright footer audit..."
          
          # This flag will be set to 1 if any file fails the check.
          FAILURE_DETECTED=0

          # Find all files ending in .md, excluding the .git directory.
          # Using a process substitution with a 'while' loop is the safest way.
          while IFS= read -r file; do
            # Check if the current file is in our exclusion list.
            is_excluded=false
            for excluded_file in "${EXCLUDE_FILES[@]}"; do
              if [[ "$file" == "$excluded_file" ]]; then
                is_excluded=true
                break
              fi
            done

            if [ "$is_excluded" = true ]; then
              echo "INFO: Skipping excluded file: $file"
              continue # Move to the next file
            fi

            # Extract the last N lines from the file to get its actual footer.
            ACTUAL_FOOTER=$(tail -n "$FOOTER_LINES" "$file")

            # Compare the actual footer with the golden copy.
            if [ "$ACTUAL_FOOTER" != "$GOLDEN_FOOTER" ]; then
              # If they don't match, print a detailed error and set the failure flag.
              echo "-------------------------------------------------------------"
              echo "ERROR: Footer mismatch in file: $file"
              echo "--- EXPECTED FOOTER ---"
              echo "$GOLDEN_FOOTER"
              echo "--- ACTUAL FOOTER ---"
              echo "$ACTUAL_FOOTER"
              echo "-------------------------------------------------------------"
              FAILURE_DETECTED=1
            else
              # If they match, print a success message for that file.
              echo "OK: Footer check passed for: $file"
            fi
          done < <(find . -type f -name "*.md" ! -path "./.git/*")

          # After checking all files, check the final status of our flag.
          if [ "$FAILURE_DETECTED" -eq 0 ]; then
            echo "SUCCESS: All footers are correct and consistent."
            exit 0 # Exit with a success code
          else
            echo "FAILURE: One or more files have incorrect or missing footers. Please review the logs above."
            exit 1 # Exit with a failure code. This will make the Gitea Action fail.
          fi